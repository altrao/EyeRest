name: Create Release

on:
  push:
    tags:
      - v*

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.10.11'
      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Build application
        run: |
          python -m PyInstaller eye-rest-app.spec
      - uses: actions/upload-artifact@v4
        with:
          name: EyeRest
          path: dist/eye-rest-app.exe
      - name: Get previous tag
        id: previous_tag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $(git describe --tags --abbrev=0)^)
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
        shell: bash
        continue-on-error: true
      - name: Get commit log
        id: commit_log
        run: |
          TAG=${{ github.ref }}
          PREVIOUS_TAG=${{ steps.previous_tag.outputs.previous_tag }}

          if [[ -z "$PREVIOUS_TAG" ]]; then
            LOG=$(git log --pretty=format:"- %s (%h)" $TAG)
          else
            LOG=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..$TAG)
          fi

          echo "commit_log<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Release ${{ github.event.head_commit.message }}

            ${{ steps.commit_log.outputs.commit_log }}
          draft: false
          prerelease: false
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/eye-rest-app.exe
          asset_name: Eye_Rest.exe
          asset_content_type: applications/zip
      - name: Create tag commit
        if: ${{ !startsWith(github.event.head_commit.message, 'chore(release):') }} #prevent infinite loops
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git checkout main #or your main branch
          git add . #or any other files you want to add.
          git commit -m "chore(release): ${{ github.ref }}"
          git push origin main